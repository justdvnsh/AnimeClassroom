plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.android.extensions'
    id 'androidx.navigation.safeargs.kotlin'

}

kapt {
    correctErrorTypes = true
}


android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "divyansh.tech.animeclassroom"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            minifyEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled true
    }
}

androidExtensions {
    experimental = true
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //noinspection GradleDependency
    implementation "androidx.core:core-ktx:$core_ktx"
    //noinspection GradleDependency
    implementation "androidx.appcompat:appcompat:$appcompat"
    //noinspection GradleDependency
    implementation "com.google.android.material:material:$material"
    //noinspection GradleDependency
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    // library modules
    implementation project(path: ':data')
    implementation project(path: ':testing')
    implementation project(path: ':domain')
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // test dependencies
    testImplementation "junit:junit:$junit"
    //noinspection GradleDependency
    androidTestImplementation "androidx.test.ext:junit:$junit_ext"
    //noinspection GradleDependency
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"

    //fragment
    //noinspection GradleDependency
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"


    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewModels"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_viewModels"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_viewModels"

    // dagger hilt
    //noinspection GradleDependency
    api "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // dagger for viewmodel
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$dagger_viewModels"
    kapt "androidx.hilt:hilt-compiler:$dagger_compiler"

    // image loading
    //noinspection GradleDependency
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // exoplayer
    implementation (
            "com.google.android.exoplayer:exoplayer:$exoplayer",
            "com.google.android.exoplayer:extension-mediasession:$exoplayer",
             "com.airbnb.android:lottie:4.1.0",
            "com.google.android.exoplayer:exoplayer-core:$exoplayer",
            "com.google.android.exoplayer:exoplayer-dash:$exoplayer",
            "com.google.android.exoplayer:exoplayer-ui:$exoplayer",
            "com.google.android.exoplayer:exoplayer-smoothstreaming:$exoplayer"
    )

    // epoxy
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    implementation "com.airbnb.android:epoxy-databinding:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    implementation "com.ms-square:expandableTextView:$expandableTextView"

//
//    // Lottie

    def room_version = "2.3.0"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

}